local library = {}
library.windows = {}

-- SERVICES
local UIS = game:GetService("UserInputService")

-- Cleanup old UI
local old = game.CoreGui:FindFirstChild("LibraryUI")
if old then
	old:Destroy()
end

-- CreateWindow
function library:CreateWindow(title)
	local ScreenGui = Instance.new("ScreenGui")
	ScreenGui.ResetOnSpawn = false
	ScreenGui.Name = "LibraryUI"
	ScreenGui.Parent = game.CoreGui

	local Frame = Instance.new("Frame")
	Frame.Size = UDim2.new(0, 250, 0, 250) -- More vertical space
	Frame.Position = UDim2.new(0.5, -125, 0.5, -125)
	Frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Frame.BorderSizePixel = 0
	Frame.Active = true
	Frame.Parent = ScreenGui

	local Title = Instance.new("TextLabel")
	Title.Size = UDim2.new(1, 0, 0, 40)
	Title.BackgroundTransparency = 1
	Title.Text = title or "Window"
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.Font = Enum.Font.GothamBold
	Title.TextSize = 16
	Title.Parent = Frame

	-- Scrollable container
	local container = Instance.new("ScrollingFrame")
	container.Position = UDim2.new(0, 0, 0, 40)
	container.Size = UDim2.new(1, 0, 1, -40)
	container.CanvasSize = UDim2.new(0, 0, 0, 0)
	container.ScrollBarThickness = 6
	container.AutomaticCanvasSize = Enum.AutomaticSize.Y
	container.BackgroundTransparency = 1
	container.ClipsDescendants = true
	container.Parent = Frame

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 5)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = container

	-- Modern drag
	local dragging, dragInput, dragStart, startPos

	Frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = Frame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	Frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			dragInput = input
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			Frame.Position = UDim2.new(
				startPos.X.Scale,
				startPos.X.Offset + delta.X,
				startPos.Y.Scale,
				startPos.Y.Offset + delta.Y
			)
		end
	end)

	-- API
	local window = {}

	function window:CreateToggle(name, callback)
		local toggle = Instance.new("TextButton")
		toggle.Size = UDim2.new(1, -10, 0, 30)
		toggle.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		toggle.Text = "[ OFF ] " .. name
		toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
		toggle.Font = Enum.Font.Gotham
		toggle.TextSize = 14
		toggle.AutoButtonColor = false
		toggle.LayoutOrder = 1
		toggle.Parent = container

		local state = false
		toggle.MouseButton1Click:Connect(function()
			state = not state
			toggle.Text = (state and "[ ON  ] " or "[ OFF ] ") .. name
			if callback then callback(state) end
		end)
	end

	return window
end

return library
